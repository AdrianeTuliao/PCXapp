// Generated by view binder compiler. Do not edit!
package com.example.pcxlogin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pcxlogin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CreateAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText cityInput;

  @NonNull
  public final Button confirmBtn;

  @NonNull
  public final EditText contactnumInput;

  @NonNull
  public final LinearLayout formLayout;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ImageView ovalBackground;

  @NonNull
  public final EditText usernameInput;

  private CreateAccountBinding(@NonNull ConstraintLayout rootView, @NonNull EditText cityInput,
      @NonNull Button confirmBtn, @NonNull EditText contactnumInput,
      @NonNull LinearLayout formLayout, @NonNull ConstraintLayout main,
      @NonNull ImageView ovalBackground, @NonNull EditText usernameInput) {
    this.rootView = rootView;
    this.cityInput = cityInput;
    this.confirmBtn = confirmBtn;
    this.contactnumInput = contactnumInput;
    this.formLayout = formLayout;
    this.main = main;
    this.ovalBackground = ovalBackground;
    this.usernameInput = usernameInput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CreateAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CreateAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.create_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CreateAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city_input;
      EditText cityInput = ViewBindings.findChildViewById(rootView, id);
      if (cityInput == null) {
        break missingId;
      }

      id = R.id.confirm_btn;
      Button confirmBtn = ViewBindings.findChildViewById(rootView, id);
      if (confirmBtn == null) {
        break missingId;
      }

      id = R.id.contactnum_input;
      EditText contactnumInput = ViewBindings.findChildViewById(rootView, id);
      if (contactnumInput == null) {
        break missingId;
      }

      id = R.id.form_layout;
      LinearLayout formLayout = ViewBindings.findChildViewById(rootView, id);
      if (formLayout == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.oval_background;
      ImageView ovalBackground = ViewBindings.findChildViewById(rootView, id);
      if (ovalBackground == null) {
        break missingId;
      }

      id = R.id.username_input;
      EditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      return new CreateAccountBinding((ConstraintLayout) rootView, cityInput, confirmBtn,
          contactnumInput, formLayout, main, ovalBackground, usernameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
